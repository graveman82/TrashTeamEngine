======================
 (1) Работа с памятью
======================

---------------------------------------
 (1.1) Отладка нехватки памяти
---------------------------------------
(1.1.1) Установите глобальный отладчик, вызываемый при нехватке памяти, через функцию ZvdSetNotEnoughMemoryHandler(). 
(1.1.2) Функция отладчика должна иметь прототип согласно определению:
typedef void (__stdcall *ZvdNotEnoughMemoryHandler_t)(const ZvdErrorDesc&);
(1.1.3) Реализация отладчика. Лучшее решение заключается в том, чтобы отладчик вызывал метод из класса движка, ответственный за реальную обработку ситуации нехватки памяти. Этот отладчик в движке должен фиксировать возникновение ситуации и возвращать управление в ZvdMalloc(). При полном возврате из ZvdMalloc() и всех ее вызвавших функций будет передаваться по эстафете код возврата (в виде нулевого указателя или кода ошибки) и в какой-то момент управление перейдет к движку. Тогда движок проверит, связан ли код возврата с ранее фиксированной информацией о нехватке памяти, и если, связан, то уже завершит работу.